<html>
<head>
<title>YA Perl Advent Calendar 2005: O Christmas Trie! O Christmas Trie!</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body>
<h1><a href="../">YA Perl Advent Calendar</a> 2005-12-18</h1>
I bring you yet another regular expression treat,
<a href="http://search.cpan.org/search?module=Regexp::Assemble">Regexp::Assemble</a>.
This little tool performs trie optimization, that is to say it finds the common
prefixes and suffixes of the expressions you give it and assembles them into
an optimized regular expression. It'll accept strings or regular expressions,
and a whole slough of options you'll probably never need.
<p>
The sample code at the end gives the following output, which demonstrates the
undocumented feature of sucking if you need/want to be able to appened to the
parts list after compilation. <b>Update</b>: <a href="http://rt.cpan.org/NoAuth/Bug.html?id=16588">The author has replied</a>.
<pre class="c">
Tree Trimmings:
        (?-xism:(?:(?:(?:ornamen|ligh)t|nutcracker|candle)s|popcorn|tinsel))

Doh! We forgot to top the tree!

Tree Trimmings:
        (?-xism:star)

Light'er up!
<em>
#Adding a star clobbered our tree, but setting the option to prevent this
#yields an unoptimized expression</em>

Tree Trimmings:
        (?-xism:(?:nutcrackers|ornaments|candles|popcorn|lights|tinsel))

Doh! We forgot to top the tree!
Tree Trimmings:
        (?-xism:(?:nutcrackers|ornaments|candles|popcorn|lights|tinsel|star))

Light'er up!
</pre>

<h1><a href="mod18.pl">mod18.pl</a></h1>
<hr />
<pre>
   1 <span class="k">use</span> <span class="w">Regexp::Assemble</span><span class="sc">;</span>
   2 
   3 <span class="k">foreach</span><span class="s">(</span> <span class="n">0</span> .. <span class="n">1</span><span class="s">)</span><span class="s">{</span>
   4   <span class="k">my</span> <span class="i">$ra</span> = <span class="w">new</span> <span class="i">Regexp::Assemble</span><span class="s">(</span><span class="w">mutable</span><span class="cm">=&gt;</span><span class="i">$_</span><span class="s">)</span><span class="sc">;</span>
   5   <span class="i">$ra</span><span class="i">-&gt;add</span><span class="s">(</span><span class="q">qw'popcorn tinsel lights candles nutcrackers ornaments'</span><span class="s">)</span><span class="sc">;</span>
   6   <span class="i">isDone</span><span class="s">(</span><span class="i">$ra</span><span class="s">)</span><span class="sc">;</span>
   7 <span class="s">}</span>
   8 
<a name="isDone-"></a>   9 <span class="k">sub </span><span class="m">isDone</span><span class="s">{</span>
  10   <span class="k">my</span> <span class="i">$ra</span> = <span class="k">shift</span><span class="sc">;</span>
  11 
  12   <span class="k">printf</span> <span class="q">&quot;Tree Trimmings:\n\t%s\n\n&quot;</span><span class="cm">,</span> <span class="i">$ra</span><span class="i">-&gt;re</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
  13 
  14   <span class="k">if</span><span class="s">(</span> <span class="i">$ra</span><span class="i">-&gt;re</span><span class="s">(</span><span class="s">)</span> !~ <span class="q">&quot;star&quot;</span> <span class="s">)</span><span class="s">{</span>
  15     <span class="k">warn</span> <span class="q">&quot;Doh! We forgot to top the tree!\n&quot;</span><span class="sc">;</span>
  16     <span class="i">$ra</span><span class="i">-&gt;add</span><span class="s">(</span><span class="q">'star'</span><span class="s">)</span><span class="sc">;</span>
  17     <span class="i">isDone</span><span class="s">(</span><span class="i">$ra</span><span class="s">)</span><span class="sc">;</span>
  18   <span class="s">}</span>
  19   <span class="k">else</span><span class="s">{</span>
  20     <span class="k">warn</span><span class="s">(</span><span class="q">&quot;Light'er up!\n&quot;</span><span class="s">)</span><span class="sc">;</span>
  21   <span class="s">}</span>
  22 <span class="s">}</span>
</pre>

<h1>See Also</h1>
<a href="http://search.cpan.org/search?module=Regexp::List">Regexp::List</a>
</body>
</html>
